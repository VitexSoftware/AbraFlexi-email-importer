{
    "image": "data:image\/svg+xml;base64,",
    "name": "Email Importer",
    "description": "Na\u010d\u00edt\u00e1 doklady z mailboxu do FlexiBee",
    "executable": "\/usr\/bin\/imap2abraflexi",
    "setup": "abraflexi-email-importer-init",
    "cmdparams": "",
    "deploy": "apt install abraflexi-email-importer",
    "homepage": "https://github.com/VitexSoftware/AbraFlexi-email-importer",
    "requirements": "AbraFlexi",
    "ociimage": "docker.io/vitexsoftware/abraflexi-email-importer",
    "topics": "Email,Importer,Isdoc",
    "uuid": "0323bde6-a24c-4faf-90ff-45dd88c15603",
    "environment": {
        "ABRAFLEXI_COMPANY": {
            "type": "string",
            "description": "",
            "defval": "demo_de",
            "required": false
        },
        "ABRAFLEXI_LOGIN": {
            "type": "string",
            "description": "AbraFlexi Login",
            "defval": "winstrom",
            "required": false
        },
        "ABRAFLEXI_PASSWORD": {
            "type": "string",
            "description": "AbraFlexi password",
            "defval": "winstrom",
            "required": false
        },
        "ABRAFLEXI_URL": {
            "type": "string",
            "description": "AbraFlexi Server URI",
            "defval": "https:\/\/demo.flexibee.eu:5434",
            "required": false
        },
        "IMAP_LOGIN": {
            "type": "text",
            "description": "",
            "defval": "",
            "required": false
        },
        "IMAP_MAILBOX": {
            "type": "text",
            "description": "",
            "defval": "INBOX",
            "required": false
        },
        "IMAP_OPTIONS": {
            "type": "text",
            "description": "",
            "defval": "imap\/ssl",
            "required": false
        },
        "IMAP_PASSWORD": {
            "type": "password",
            "description": "",
            "defval": "",
            "required": true
        },
        "IMAP_PORT": {
            "type": "number",
            "description": "",
            "defval": "993",
            "required": true
        },
        "IMAP_SERVER": {
            "type": "text",
            "description": "",
            "defval": "",
            "required": true
        },
        "ABRAFLEXI_STORAGE": {
            "type": "text",
            "description": "Default storage for new items",
            "defval": "SKLAD",
            "required": false
        },
        "ABRAFLEXI_DOCTYPE": {
            "type": "text",
            "description": "code of the type of invoices received",
            "defval": "FAKTURA",
            "required": true
        },
        "DONE_FOLDER": {
            "type": "text",
            "description": "Move Mails with imported invoices here",
            "defval": "ImportedInvoices",
            "required": true
        }
    },
    "multiflexi": "1.9.2.240"
}
