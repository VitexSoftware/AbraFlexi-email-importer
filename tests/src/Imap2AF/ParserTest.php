<?php

namespace Test\AbraFlexi\Imap2AF;

use AbraFlexi\Imap2AF\Parser;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-12-02 at 18:09:08.
 */
class ParserTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var Parser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new Parser();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @depends testloadFile
     * @covers AbraFlexi\Imap2AF\Parser::cleanUp
     */
    public function testcleanUp() {
        $this->assertEquals('', $this->object->cleanUp([]));
    }

    /**
     * @covers AbraFlexi\Imap2AF\Parser::domToArray
     */
    public function testdomToArray() {
        $this->object->loadISDOC(constant('ISDOC_FILE'));
        $this->assertEquals(['Name' => 'SPOJE.NET s.r.o.'], $this->object->domToArray($this->object->getXmlDomDocument()->getElementsByTagName('AccountingSupplierParty')[0]->getElementsByTagName('PartyName')[0]));
    }

    /**
     * @covers AbraFlexi\Imap2AF\Parser::unpackIsdocX
     */
    public function testunpackIsdocX() {
        $this->assertEquals(sys_get_temp_dir() . '/Faktura_VF1_6877_2020.isdocxunzipped/Faktura_VF1_6877_2020.isdoc', $this->object->unpackIsdocX(constant('ISDOCX_FILE')));
    }

    /**
     * @covers AbraFlexi\Imap2AF\Parser::loadFile
     */
    public function testloadFile() {
        $this->assertTrue($this->object->loadFile(constant('ISDOCX_FILE')));
    }

    /**
     * @depends testloadISDOC
     * @covers AbraFlexi\Imap2AF\Parser::loadISDOCx
     */
    public function testloadISDOCx() {
        $this->assertTrue($this->object->loadISDOCx(constant('ISDOCX_FILE')));
    }

    /**
     * @covers AbraFlexi\Imap2AF\Parser::loadISDOC
     */
    public function testloadISDOC() {
        $this->assertTrue($this->object->loadISDOC(constant('ISDOC_FILE')), 'Error loading ISDOC');
    }

}
