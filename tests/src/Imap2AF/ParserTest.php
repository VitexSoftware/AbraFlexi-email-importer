<?php

declare(strict_types=1);

/**
 * This file is part of the Imap2AbraFlexi package
 *
 * https://github.com/VitexSoftware/AbraFlexi-email-importer
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi\Imap2AF;

use AbraFlexi\Imap2AF\Parser;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2020-12-02 at 18:09:08.
 */
class ParserTest extends \PHPUnit\Framework\TestCase
{
    protected Parser $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Parser();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @depends testloadFile
     *
     * @covers \AbraFlexi\Imap2AF\Parser::cleanUp
     */
    public function testcleanUp(): void
    {
        $tempFiles = [
            sys_get_temp_dir().'/tempfile1.tmp',
            sys_get_temp_dir().'/tempfile2.tmp',
            sys_get_temp_dir().'/tempfile3.tmp',
        ];
        $this->object->cleanUp(invoiceFiles: $tempFiles);

        foreach ($tempFiles as $tempFile) {
            $this->assertFileDoesNotExist($tempFile);
        }
    }

    /**
     * @covers \AbraFlexi\Imap2AF\Parser::domToArray
     */
    public function testdomToArray(): void
    {
        $this->object->loadISDOC(\constant('ISDOC_FILE'));
        $this->assertEquals(['Name' => 'SPOJE.NET s.r.o.'], $this->object->domToArray($this->object->getXmlDomDocument()->getElementsByTagName('AccountingSupplierParty')[0]->getElementsByTagName('PartyName')[0]));
    }

    /**
     * @covers \AbraFlexi\Imap2AF\Parser::unpackIsdocX
     */
    public function testunpackIsdocX(): void
    {
        $this->assertEquals(sys_get_temp_dir().'/Faktura_VF1_6877_2020.isdocxunzipped/Faktura_VF1_6877_2020.isdoc', $this->object->unpackIsdocX(\constant('ISDOCX_FILE')));
    }

    /**
     * @covers \AbraFlexi\Imap2AF\Parser::loadFile
     */
    public function testloadFile(): void
    {
        $this->assertTrue($this->object->loadFile(\constant('ISDOCX_FILE')));
    }

    /**
     * @depends testloadISDOC
     *
     * @covers \AbraFlexi\Imap2AF\Parser::loadISDOCx
     */
    public function testloadISDOCx(): void
    {
        $this->assertTrue($this->object->loadISDOCx(\constant('ISDOCX_FILE')));
    }

    /**
     * @covers \AbraFlexi\Imap2AF\Parser::loadISDOC
     */
    public function testloadISDOC(): void
    {
        $this->assertTrue($this->object->loadISDOC(\constant('ISDOC_FILE')), 'Error loading ISDOC');
    }
}
